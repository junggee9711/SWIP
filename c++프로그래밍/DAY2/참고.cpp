#include <cstdlib>

int main()
{
	int n;				// 지역 변수. 메모리 할당 과정, 이름(n)이 부여됨.
						//			  파괴 시점이 정해져 있다.
						//			  자동으로 파괴 된다.
						// 편하지만(자동삭제), 자유는 없다!
	n = 10;

//	new int;			// 또는, malloc(sizeof(int))
						// 메모리 할당했지만, "이름이 없다". (포인터의 이름만 있을 뿐)
						// 반드시 주소로만 접근해야 한다.
						// 그래서, 반환된 주소는 반드시 포인터 변수에 담아야 한다.

	int* p = new int;	// p 는 할당한 메모리의 첫 주소를 가리키는 "지역변수"
						// p 가 동적 할당된 주소를 담고 있으므로,
						// p 를 사용해서만 동적 할당 메모리에 접근 가능.

	*p = 10;			// ok.
	p[0] = 10;			// ok.

	delete p;			// 이 코드는 p 를 파괴하는 것이 아닙니다.
						// => p 가 가리키는 주소의 '메모리' 파괴

} // <<=== p 가 파괴.