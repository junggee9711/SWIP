// 21_참조반환4

#include <vector>

int x = 0;

int  f1() { return x; }		// 값 "0" 반환 (return by value)
							// mov eas, 0 2개 반환
							//	즉, 약속된 장소에 x의 값인 0을 넣는다.

int& f2() { return x; }		// x의 값이 아닌 메모리 정보(참조는 결국 주소) 반환
							// (return by reference)

int main()
{
	int v1 = 10, v2 = 10;

	// 모든 변수는 "이름", "값", "주소" 가 있습니다.
	// 코드에서 "변수의 이름" 사용시.. 컴파일러는 "값" 또는 "메모리주소"로 변경합니다.
	v1 = 20;				// (v1 의 "메모리 주소"를 꺼내는 기계어 코드) = 20;
	v2 = v1;				// v2 = (v1 의 "값"을 꺼내는 기계어 코드);
 
//	f1() = 10;				// error. 0 = 10; 과 같은 것임
	f2() = 10;				// ok.    x = 10; 과 같은 것임



	std::vector<int> v = { 1, 2, 3 };
	v[0] = 10;				// v.operator[](0) = 10; 으로 변경 됩니다.
							// 함수호출(0) = 10;		 과 같은 표기법입니다.
							// 좌변의 함수에 '값' 인 0을 넣었다는것은,
							// .operator[] 함수가 주소 리턴 (return by reference) 이라는 것.
}
