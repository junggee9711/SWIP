// 정리

// C++ 에서 알아야 하는것
// 1. C보다 발전된 C++ 문법들 
//  : 함수, template, new, reference, auto 등

// 2. 객체지향 문법들
//	  1) 타입을 먼저 만들자. class 한개 만들때 필요한 문법들
//		 => private, public, 생성자/소멸자, 복사생성자, 멤버초기화리스트,
//			static member, const member function, this
//    2) 상속 문법들
//		 => protected, 상속에서 생성자 호출 원리, upcasting (Animal *p = &dog),
//			가상함수와 함수 바인딩 (static binding, dynamic binding),
//			순수 가상함수(=0;), 추상 클래스, 인터페이스,
//		 =>	예제 : shape, 메뉴
//		 => 용어들 : 캡슐화, 다형성, OCP ...
//		 * 위 내용 이후에 "객체지향 디자인" 꼭 학습해 보세요.
//------------------------------------------------------------------------------

// 3. 객체지향 문법은 아니지만, 많은 객체지향 언어가 지원하는 문법
//	 : 연산자 재정의, 예외(exception, 임베디드분야는 거의 사용안함)

// 4. C++ 표준 라이브러리 (미리 만들어진 타입들, STL) 사용법
//	  - STL 의 3대 요소
//		1) Container : 데이터를 보관하는 자료구조를 클래스(템플릿)로 만든것
//					=> vector, list, set(tree) 등 [ 15 개 정도 ]
//					=> 각 컨테이너가 데이터를 어떻게 보관하는지 메모리 그림을 이해하세요.
//		2) Iterator  : 컨테이너의 내부구조에 상관없이 동일하게 열거하기 위한 도구
//					=> 포인터와 사용법이 동일하다. 
//		3) Algorithm : 컨테이너의 요소에 대한 다양한 연산
//					=> find, transform, sort, binary_search, max, min, reverse [ 100여개 ]
//					=> cppreference.com 에서 "std::find" 검색
// 
//   + 멀티스레드 라이브러리, 스마트 포인터, 날짜 시간, 파일 입출력... 등의 라이브러리들도 있음